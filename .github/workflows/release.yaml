name: Release

on:
  release:
    types:
      - created

env:
  GO111MODULE: on
  PROXY_ENABLED: false

jobs:
  version:
    name: Set release version
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.release-version-step.outputs.RELEASE_VERSION }}
    steps:
      - id: release-version-step
        run: echo "::set-output name=RELEASE_VERSION::${GITHUB_REF#refs/tags/}"

  # Run test
  run-test:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        os: [ubuntu-18.04, macos-10.15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: go test -v ./...

  # Create Krane binary & attach it to the release
  build-binary-release:
    needs: [version, run-test]
    name: Publish the krane executable
    runs-on: ubuntu-latest

    steps:
      - name: Print release version
        run: echo "Publishing krane version ${{ env.RELEASE_VERSION }}"
        env:
          RELEASE_VERSION: ${{ needs.version.outputs.release-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # See: https://goreleaser.com/ci/actions/

      - name: Set up Go 1.14
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
        id: go

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@master
        with:
          version: latest
          args: release --rm-dist
          workdir: ./cmd/krane
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish Docker image to DockerHub
  publish-image-to-dockerhub:
    needs: [version, run-test, build-binary-release]
    name: Publish to DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            biensupernice/krane:latest
            biensupernice/krane:${{ env.RELEASE_VERSION }}
          build-args: KRANE_VERSION=${{ env.RELEASE_VERSION }}
        env:
          RELEASE_VERSION: ${{ needs.version.outputs.release-version }}
          
  # Publish Docker image to GitHub Container Registry
  publish-image-to-ghcr:
    name: Publish to GitHub Container Registry
    needs: [version, run-test, build-binary-release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ env.RELEASE_VERSION }}
          build-args: KRANE_VERSION=${{ env.RELEASE_VERSION }}
        env:
          RELEASE_VERSION: ${{ needs.version.outputs.release-version }}
